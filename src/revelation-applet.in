#!/usr/bin/env python

#
# Revelation 0.4.3 - a password manager for GNOME 2
# http://oss.codepoet.no/revelation/
# $Id$
#
# Applet for account lookup
#
#
# Copyright (c) 2003-2005 Erik Grinaker
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#

import gnome, gnome.applet, gtk, sys

if "@pythondir@" not in sys.path:
	sys.path.insert(0, "@pythondir@")

from revelation import config, dialog, ui, util


class RevelationApplet(object):
	"Revelation applet"

	def __init__(self, applet, iid):
		self.applet	= applet
		self.iid	= iid

		sys.excepthook = self.__cb_exception

		self.__init_facilities()
		self.__init_ui()


	def __init_facilities(self):
		"Sets up facilities"

		self.items	= ui.ItemFactory(self.applet)


	def __init_ui(self):
		"Sets up the main ui"

		# set up popup menu
		menuxml = """
<popup name="button3">
	<menuitem name="prefs"	verb="prefs"	label="Preferences"	pixtype="stock"	pixname="gtk-properties" />
	<menuitem name="kill"	verb="kill"	label="Kill"		pixtype="stock"	pixname="gtk-quit" />
	<menuitem name="about"	verb="about"	label="About"		pixtype="stock"	pixname="gnome-stock-about" />
</popup>
"""

		self.applet.setup_menu(menuxml, (
			( "about",	lambda w,d=None: True ),
			( "kill",	lambda w,d=None: sys.exit() ),
			( "prefs",	lambda w,d=None: True ),
		), None)

		# set up ui items
		self.icon	= ui.Image(ui.STOCK_REVELATION, ui.ICON_SIZE_APPLET)
		self.entry	= ui.Entry()

		self.applet.add(ui.HBox(self.icon, self.entry))

		# set up callbacks
		self.entry.connect("button_press_event", self.__cb_focus_entry)


	def __cb_exception(self, type, value, trace):
		"Callback for unhandled exceptions"

		if type == KeyboardInterrupt:
			sys.exit(1)

		traceback = util.trace_exception(type, value, trace)
		sys.stderr.write(traceback)

		if dialog.Exception(None, traceback).run() == True:
			gtk.main()

		else:
			sys.exit(1)


	def __cb_focus_entry(self, widget, data = None):
		"Callback for button presses"

		# from gnome 2.10, the panel doesn't receive focus when clicked
		if hasattr(self.applet, "request_focus") == True:
			self.applet.request_focus(data.time)



def factory(applet, iid):
	"Applet factory function"

	RevelationApplet(applet, iid)
	applet.show_all()

	return True



if __name__ == "__main__":
	gnome.init(config.APPNAME, config.VERSION)

	gnome.applet.bonobo_factory(
		"OAFIID:GNOME_RevelationApplet_Factory",
		gnome.applet.Applet.__gtype__,
		config.APPNAME, config.VERSION, factory
	)

